{"version":3,"file":"rollup-public-entrypoints.js","sourceRoot":"","sources":["rollup-public-entrypoints.ts"],"names":[],"mappings":"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","sourcesContent":["import walkSync from 'walk-sync';\nimport path from 'path';\nimport minimatch from 'minimatch';\n\nimport type { Plugin } from 'rollup';\n\nfunction normalizeFileExt(fileName: string) {\n  return fileName.replace(/\\.ts|\\.hbs|\\.gts|\\.gjs$/, '.js');\n}\n\nexport default function publicEntrypoints(args: {\n  srcDir: string;\n  include: string[];\n}): Plugin {\n  return {\n    name: 'addon-modules',\n    async buildStart() {\n      let matches = walkSync(args.srcDir, {\n        globs: [...args.include, '**/*.hbs', '**/*.ts', '**/*.gts', '**/*.gjs'],\n      });\n\n      for (let name of matches) {\n        // the matched file, but with the extension swapped with .js\n        let normalizedName = normalizeFileExt(name);\n\n        // anything that doesn't match the users patterns, and wasn't a template-only\n        // component needs to be emitted \"as-is\" so that other plugins may handle it.\n        let isTO = isTemplateOnly(matches, name);\n\n        let isHbs = path.extname(name) === '.hbs';\n\n        // hbs for-colocated components is handled by the rollup-hbs-plugin\n        // hbs for template-only components is handled in the isTO block\n        if (isHbs && !isTO) {\n          continue;\n        }\n\n        // these chunks matched are **/*.hbs glob and are\n        // guaranteed to not have any corresponding file as a co-located component would have.\n        if (isTO) {\n          this.emitFile({\n            type: 'chunk',\n            id: path.join(args.srcDir, normalizedName),\n            fileName: normalizedName,\n          });\n\n          continue;\n        }\n\n        // anything that matches one of the user's patterns is definitely emitted\n        let isUserDefined = args.include.some((pattern) =>\n          minimatch(name, pattern)\n        );\n\n        // additionally, we want to emit chunks where the pattern matches the supported\n        // file extensions above (TS, GTS, etc) as if they were already the built JS.\n        let wouldMatchIfBuilt = args.include.some((pattern) =>\n          minimatch(normalizedName, pattern)\n        );\n\n        if (isUserDefined || wouldMatchIfBuilt) {\n          this.emitFile({\n            type: 'chunk',\n            id: path.join(args.srcDir, name),\n            fileName: normalizedName,\n          });\n\n          continue;\n        }\n      }\n    },\n  };\n}\n\nfunction isTemplateOnly(matches: string[], filePath: string) {\n  let isHbs = path.extname(filePath) === '.hbs';\n\n  if (!isHbs) return false;\n\n  let correspondingFileGlob = path.join(\n    path.dirname(filePath),\n    path.basename(filePath).replace(/hbs$/, '*')\n  );\n\n  let relatedFiles = matches.filter((match) =>\n    minimatch(match, correspondingFileGlob)\n  );\n  let isTO = relatedFiles.filter((x) => x !== filePath).length === 0;\n\n  return isTO;\n}\n"]}