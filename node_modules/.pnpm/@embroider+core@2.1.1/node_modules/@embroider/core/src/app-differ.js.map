{"version":3,"file":"app-differ.js","sourceRoot":"","sources":["app-differ.ts"],"names":[],"mappings":"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","sourcesContent":["import { AddonPackage } from '@embroider/shared-internals';\nimport MultiTreeDiff, { InputTree } from './multi-tree-diff';\nimport walkSync from 'walk-sync';\nimport { join, basename, dirname, resolve } from 'path';\nimport { mkdirpSync, unlinkSync, rmdirSync, removeSync, copySync, writeFileSync, readFileSync } from 'fs-extra';\nimport { debug } from './messages';\nimport assertNever from 'assert-never';\nimport { describeExports } from './describe-exports';\nimport { compile } from './js-handlebars';\nimport { TransformOptions } from '@babel/core';\nimport { statSync } from 'fs';\nimport { format } from 'util';\n\nexport default class AppDiffer {\n  private differ: MultiTreeDiff;\n  private sources: Source[];\n  private firstFastbootTree = Infinity;\n\n  // maps from each filename in the app to the original directory from whence it\n  // came, if it came from an addon. The mapping allows us to preserve\n  // resolution semantics so that each of the app files can still resolve\n  // relative to where it was authored.\n  //\n  // files authored within the app map to null\n  readonly files: Map<string, string | null> = new Map();\n\n  // true for files that are fastboot-only.\n  isFastbootOnly: Map<string, boolean> = new Map();\n\n  constructor(\n    private outputPath: string,\n    ownAppJSDir: string,\n    activeAddonDescendants: AddonPackage[],\n    // arguments below this point are only needed in fastboot mode. Fastboot\n    // makes this pretty messy because fastboot trees all merge into the app ðŸ¤®.\n    fastbootEnabled = false,\n    ownFastbootJSDir?: string | undefined,\n    private babelParserConfig?: TransformOptions | undefined\n  ) {\n    this.sources = activeAddonDescendants.map(addon => maybeSource(addon, 'app-js')).filter(Boolean) as Source[];\n\n    this.sources.push({\n      mayChange: true,\n      walk() {\n        return walkSync.entries(ownAppJSDir);\n      },\n      isRelocated: false,\n      locate(relativePath: string) {\n        return resolve(ownAppJSDir, relativePath);\n      },\n    });\n\n    if (!fastbootEnabled) {\n      this.differ = new MultiTreeDiff(this.sources, lastOneWins);\n      return;\n    }\n\n    this.firstFastbootTree = this.sources.length;\n    for (let addon of activeAddonDescendants) {\n      let source = maybeSource(addon, 'fastboot-js');\n      if (source) {\n        this.sources.push(source);\n      }\n    }\n    if (ownFastbootJSDir) {\n      this.sources.push({\n        mayChange: true,\n        walk() {\n          return walkSync.entries(ownFastbootJSDir);\n        },\n        isRelocated: false,\n        locate(relativePath) {\n          return resolve(ownFastbootJSDir, relativePath);\n        },\n      });\n    }\n    this.differ = new MultiTreeDiff(this.sources, fastbootMerge(this.firstFastbootTree));\n  }\n\n  update() {\n    let { ops, sources } = this.differ.update();\n    debug(`app-differ operations count: %s`, ops.length);\n    for (let [operation, relativePath] of ops) {\n      let outputPath = join(this.outputPath, relativePath);\n      switch (operation) {\n        case 'unlink':\n          unlinkSync(outputPath);\n          this.files.delete(relativePath);\n          break;\n        case 'rmdir':\n          rmdirSync(outputPath);\n          break;\n        case 'mkdir':\n          mkdirpSync(outputPath);\n          break;\n        case 'change':\n          removeSync(outputPath);\n        // deliberate fallthrough\n        case 'create':\n          let sourceIndices = sources.get(relativePath)!;\n          if (sourceIndices.length === 1) {\n            // a single file won. whether it's fastboot or non-fastboot doesn't\n            // actually change what we do here. It gets emitted in the app's\n            // namespace (if it's fastboot-only, non-fastboot code shouldn't be\n            // trying to import it anyway, because that would have already been\n            // an error pre-embroider).\n            this.isFastbootOnly.set(relativePath, sourceIndices[0] >= this.firstFastbootTree);\n            let source = this.sources[sourceIndices[0]];\n            let sourceFile = source.locate(relativePath);\n            copySync(sourceFile, outputPath, { dereference: true });\n            this.updateFiles(relativePath, source, sourceFile);\n          } else {\n            // we have both fastboot and non-fastboot files for this path.\n            // Because of the way fastbootMerge is written, the first one is the\n            // non-fastboot.\n            this.isFastbootOnly.set(relativePath, false);\n            let [browserSrc, fastbootSrc] = sourceIndices.map(i => this.sources[i]);\n            let [browserSourceFile, fastbootSourceFile] = [browserSrc, fastbootSrc].map(src =>\n              src.locate(relativePath)\n            );\n            let dir = dirname(relativePath);\n            let base = basename(relativePath);\n            let browserDest = `_browser_${base}`;\n            let fastbootDest = `_fastboot_${base}`;\n            copySync(browserSourceFile, join(this.outputPath, dir, browserDest), { dereference: true });\n            copySync(fastbootSourceFile, join(this.outputPath, dir, fastbootDest), { dereference: true });\n            writeFileSync(\n              outputPath,\n              switcher(browserDest, fastbootDest, this.babelParserConfig!, readFileSync(browserSourceFile, 'utf8'))\n            );\n            this.updateFiles(relativePath, browserSrc, browserSourceFile);\n          }\n          break;\n        default:\n          assertNever(operation);\n      }\n    }\n  }\n\n  private updateFiles(relativePath: string, source: Source, sourceFile: string) {\n    if (source.isRelocated) {\n      this.files.set(relativePath, sourceFile);\n    } else {\n      this.files.set(relativePath, null);\n    }\n  }\n}\n\nfunction lastOneWins(treeIds: number[]) {\n  return treeIds.slice(-1);\n}\n\nfunction fastbootMerge(firstFastbootTree: number) {\n  return function _fastbootMerge(treeIds: number[]): number[] {\n    let mainWinner, fastbootWinner;\n    for (let id of treeIds) {\n      if (id < firstFastbootTree) {\n        mainWinner = id;\n      } else {\n        fastbootWinner = id;\n      }\n    }\n    if (mainWinner != null && fastbootWinner != null) {\n      return [mainWinner, fastbootWinner];\n    } else if (mainWinner != null) {\n      return [mainWinner];\n    } else if (fastbootWinner != null) {\n      return [fastbootWinner];\n    } else {\n      throw new Error(`bug: should always have at least one winner in fastbootMerge`);\n    }\n  };\n}\n\nconst switcherTemplate = compile(`\nimport { macroCondition, getGlobalConfig, importSync } from '@embroider/macros';\nlet mod;\nif (macroCondition(getGlobalConfig().fastboot?.isRunning)){\n  mod = importSync(\"./{{js-string-escape fastbootDest}}\");\n} else {\n  mod = importSync(\"./{{js-string-escape browserDest}}\");\n}\n{{#if hasDefaultExport}}\nexport default mod.default;\n{{/if}}\n{{#each names as |name|}}\nexport const {{name}} = mod.{{name}};\n{{/each}}\n`) as (params: { fastbootDest: string; browserDest: string; names: string[]; hasDefaultExport: boolean }) => string;\n\nfunction switcher(\n  browserDest: string,\n  fastbootDest: string,\n  babelParserConfig: TransformOptions,\n  browserSource: string\n): string {\n  let { names, hasDefaultExport } = describeExports(browserSource, babelParserConfig);\n  return switcherTemplate({ fastbootDest, browserDest, names: [...names], hasDefaultExport });\n}\n\ninterface Source extends InputTree {\n  // find the real on disk location of the file that is presented externally as\n  // `relativePath`\n  locate(relativePath: string): string;\n\n  // true if this source relocates its file out of their original package,\n  // meaning we will need to track them in order to adjust package resolution\n  isRelocated: boolean;\n}\n\nfunction maybeSource(addon: AddonPackage, key: 'app-js' | 'fastboot-js'): Source | undefined {\n  let maybeFiles = addon.meta[key];\n  if (maybeFiles) {\n    let files = maybeFiles;\n    return {\n      mayChange: addon.mayRebuild,\n      walk() {\n        return Object.entries(files).map(([externalName, internalName]) => {\n          try {\n            let stat = statSync(resolve(addon.root, internalName));\n            return {\n              relativePath: withoutMandatoryDotSlash(externalName, [\n                'in package.json at %s in key ember-addon.%s',\n                addon.root,\n                key,\n              ]),\n              mode: stat.mode,\n              size: stat.size,\n              mtime: stat.mtime,\n              isDirectory() {\n                return false;\n              },\n            };\n          } catch (err) {\n            if (err.code === 'ENOENT') {\n              throw new Error(\n                `${addon.name}/package.json lists ${internalName} in ember-addon.${key}, but that file does not exist`\n              );\n            }\n            throw err;\n          }\n        });\n      },\n      isRelocated: true,\n      locate(relativePath: string) {\n        let internal = files['./' + relativePath];\n        if (!internal) {\n          throw new Error(`bug: couldn't find ${relativePath} in ${JSON.stringify(files)}`);\n        }\n        return resolve(addon.root, internal);\n      },\n    };\n  }\n}\n\nfunction withoutMandatoryDotSlash(filename: string, debugInfo: any[]): string {\n  if (!filename.startsWith('./')) {\n    throw new Error(`${format(debugInfo)}: ${filename} is required to start with \"./\"`);\n  }\n  return filename.slice(2);\n}\n"]}