{"version":3,"file":"resolver.js","sourceRoot":"","sources":["resolver.ts"],"names":[],"mappings":"","sourcesContent":["import type { TemplateCompiler } from './template-compiler-common';\nimport { Options } from './babel-plugin-adjust-imports';\n\nexport interface ResolvedDep {\n  runtimeName: string;\n  path: string;\n  absPath: string;\n}\n\nexport interface Resolver {\n  astTransformer(templateCompiler: TemplateCompiler): unknown;\n  dependenciesOf(moduleName: string): ResolvedDep[];\n\n  // this takes an absolute path to a file and gives back a path like\n  // \"the-package-name/path/to/the-file.js\", while taking into account any\n  // backward-compatible runtime name of the package. It's used by the template\n  // compiler, because this is the kind of path AST plugins expect to see.\n  absPathToRuntimePath(absPath: string): string;\n\n  // this takes an absolute path to a file and gives back the runtime name of\n  // that module, as it would tradtionally be named within loader.js.\n  absPathToRuntimeName(absPath: string): string;\n\n  adjustImportsOptions: Options;\n}\n"]}