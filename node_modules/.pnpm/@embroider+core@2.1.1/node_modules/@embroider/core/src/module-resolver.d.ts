import { Package } from '@embroider/shared-internals';
export interface Options {
    renamePackages: {
        [fromName: string]: string;
    };
    renameModules: {
        [fromName: string]: string;
    };
    extraImports: {
        absPath: string;
        target: string;
        runtimeName?: string;
    }[];
    externalsDir: string;
    activeAddons: {
        [packageName: string]: string;
    };
    relocatedFiles: {
        [relativePath: string]: string;
    };
    resolvableExtensions: string[];
    appRoot: string;
}
export declare type Resolution = {
    result: 'continue';
} | {
    result: 'redirect-to';
    specifier: string;
} | {
    result: 'external';
    specifier: string;
} | {
    result: 'runtime-failure';
    specifier: string;
};
export declare class Resolver {
    readonly filename: string;
    private options;
    readonly originalFilename: string;
    constructor(filename: string, options: Options);
    resolve(specifier: string, isDynamic: boolean): Resolution;
    owningPackage(): Package | undefined;
    private relocatedIntoPackage;
    private handleRenaming;
    private handleExternal;
}
