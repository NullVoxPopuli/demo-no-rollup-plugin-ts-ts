{"version":3,"file":"app.js","sourceRoot":"","sources":["app.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AddonMeta,\n  AppMeta,\n  Package,\n  AddonPackage,\n  explicitRelative,\n  extensionsPattern,\n  PackageInfo,\n} from '@embroider/shared-internals';\nimport { OutputPaths } from './wait-for-trees';\nimport { compile } from './js-handlebars';\nimport resolve from 'resolve';\nimport { Memoize } from 'typescript-memoize';\nimport { copySync, ensureDirSync, readJSONSync, statSync, unlinkSync, writeFileSync } from 'fs-extra';\nimport { dirname, join, resolve as resolvePath, sep } from 'path';\nimport { debug, warn } from './messages';\nimport sortBy from 'lodash/sortBy';\nimport flatten from 'lodash/flatten';\nimport AppDiffer from './app-differ';\nimport { PreparedEmberHTML } from './ember-html';\nimport { Asset, EmberAsset, ImplicitAssetPaths, InMemoryAsset, OnDiskAsset } from './asset';\nimport assertNever from 'assert-never';\nimport SourceMapConcat from 'fast-sourcemap-concat';\nimport Options from './options';\nimport { MacrosConfig } from '@embroider/macros/src/node';\nimport { PluginItem, TransformOptions } from '@babel/core';\nimport { makePortable } from './portable-babel-config';\nimport { Options as AdjustImportsOptions } from './babel-plugin-adjust-imports';\nimport { mangledEngineRoot } from './engine-mangler';\nimport { AppFiles, Engine, EngineSummary, RouteFiles } from './app-files';\nimport partition from 'lodash/partition';\nimport mergeWith from 'lodash/mergeWith';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { PortableHint, maybeNodeModuleVersion } from './portable';\nimport escapeRegExp from 'escape-string-regexp';\nimport type { Options as EtcOptions, Transform } from 'babel-plugin-ember-template-compilation';\nimport type { Options as ColocationOptions } from '@embroider/shared-internals/src/template-colocation-plugin';\n\nexport type EmberENV = unknown;\n\n/*\n  This interface is the boundary between the general-purpose build system in\n  AppBuilder and the messy specifics of apps.\n\n    - CompatAppAdapter in `@embroider/compat` implements this interface for\n      building based of a legacy ember-cli EmberApp instance\n    - We will want to make a different class that implements this interface for\n      building apps that don't need an EmberApp instance at all (presumably\n      because they opt into new authoring standards.\n*/\nexport interface AppAdapter<TreeNames> {\n  // the set of all addon packages that are active (recursive)\n  readonly allActiveAddons: AddonPackage[];\n\n  // the direct active addon dependencies of a given package\n  activeAddonChildren(pkg: Package): AddonPackage[];\n\n  // path to the directory where the app's own Javascript lives. Doesn't include\n  // any files copied out of addons, we take care of that generically in\n  // AppBuilder.\n  appJSSrcDir(treePaths: OutputPaths<TreeNames>): string;\n\n  // path to the directory where the app's own Fastboot-only Javascript lives.\n  // Doesn't include any files copied out of addons, we take care of that\n  // generically in AppBuilder.\n  fastbootJSSrcDir(treePaths: OutputPaths<TreeNames>): string | undefined;\n\n  // this is where you declare what assets must be in the final output\n  // (especially index.html, tests/index.html, and anything from your classic\n  // public tree).\n  assets(treePaths: OutputPaths<TreeNames>): Asset[];\n\n  // whether the ember app should boot itself automatically\n  autoRun(): boolean;\n\n  // custom app-boot logic when the autoRun is set to false\n  appBoot(): string | undefined;\n\n  // the ember app's main module\n  mainModule(): string;\n\n  // the configuration that will get passed into the ember app's main module.\n  // This traditionally comes from the `APP` property returned by\n  // config/environment.js.\n  mainModuleConfig(): unknown;\n\n  // The namespace for the app's own modules at runtime.\n  //\n  // (For apps, we _do_ still allow this to be arbitrary. This is in contrast\n  // with _addons_, which absolutley must use their real NPM package name as\n  // their modulePrefix.)\n  modulePrefix(): string;\n\n  // The module prefix when pods file layout is used\n  podModulePrefix(): string | undefined;\n\n  // The public URL at which your app will be served.\n  rootURL(): string;\n\n  // The path to ember's template compiler source\n  templateCompilerPath(): string;\n\n  // Path to a build-time Resolver module to be used during template\n  // compilation.\n  resolverTransform(): Transform | undefined;\n\n  // describes the special module naming rules that we need to achieve\n  // compatibility\n  adjustImportsOptions(): AdjustImportsOptions;\n\n  adjustImportsOptionsPath(): string;\n\n  // The template preprocessor plugins that are configured in the app.\n  htmlbarsPlugins(): Transform[];\n\n  // the app's preferred babel config. No need to worry about making it portable\n  // yet, we will do that for you.\n  babelConfig(): TransformOptions;\n\n  // the babel version that works with your babelConfig.\n  babelMajorVersion(): 7;\n\n  // The environment settings used to control Ember itself. In a classic app,\n  // this comes from the EmberENV property returned by config/environment.js.\n  emberENV(): EmberENV;\n\n  // when true, the app's own code is understood to already follow v2 standards.\n  // For example, all imports of templates have an explicit `hbs` extension, and\n  // all imports of your own package use relative imports instead of you rown\n  // name. When false, your code is treated more leniently and you get the\n  // auto-upgraded behaviors that v1 addons also get.\n  strictV2Format(): boolean;\n\n  // list of directories that point to the roots of addon packages that are\n  // under active development\n  developingAddons(): string[];\n\n  // development, test, or production\n  env: string;\n}\n\nexport function excludeDotFiles(files: string[]) {\n  return files.filter(file => !file.startsWith('.') && !file.includes('/.'));\n}\n\nexport const CACHE_BUSTING_PLUGIN = {\n  path: require.resolve('@embroider/shared-internals/src/babel-plugin-cache-busting.js'),\n  version: readJSONSync(`${__dirname}/../package.json`).version,\n};\n\nexport function addCachablePlugin(babelConfig: TransformOptions) {\n  if (Array.isArray(babelConfig.plugins) && babelConfig.plugins.length > 0) {\n    const plugins = Object.create(null);\n    plugins[CACHE_BUSTING_PLUGIN.path] = CACHE_BUSTING_PLUGIN.version;\n\n    for (const plugin of babelConfig.plugins) {\n      let absolutePathToPlugin: string;\n      if (Array.isArray(plugin) && typeof plugin[0] === 'string') {\n        absolutePathToPlugin = plugin[0] as string;\n      } else if (typeof plugin === 'string') {\n        absolutePathToPlugin = plugin;\n      } else {\n        throw new Error(`[Embroider] a babel plugin without an absolute path was from: ${plugin}`);\n      }\n\n      plugins[absolutePathToPlugin] = maybeNodeModuleVersion(absolutePathToPlugin);\n    }\n\n    babelConfig.plugins.push([\n      CACHE_BUSTING_PLUGIN.path,\n      {\n        plugins,\n      },\n    ]);\n  }\n}\n\nclass ParsedEmberAsset {\n  kind: 'parsed-ember' = 'parsed-ember';\n  relativePath: string;\n  fileAsset: EmberAsset;\n  html: PreparedEmberHTML;\n\n  constructor(asset: EmberAsset) {\n    this.fileAsset = asset;\n    this.html = new PreparedEmberHTML(asset);\n    this.relativePath = asset.relativePath;\n  }\n\n  validFor(other: EmberAsset) {\n    return this.fileAsset.mtime === other.mtime && this.fileAsset.size === other.size;\n  }\n}\n\nclass BuiltEmberAsset {\n  kind: 'built-ember' = 'built-ember';\n  relativePath: string;\n  parsedAsset: ParsedEmberAsset;\n  source: string;\n\n  constructor(asset: ParsedEmberAsset) {\n    this.parsedAsset = asset;\n    this.source = asset.html.dom.serialize();\n    this.relativePath = asset.relativePath;\n  }\n}\n\nclass ConcatenatedAsset {\n  kind: 'concatenated-asset' = 'concatenated-asset';\n  constructor(\n    public relativePath: string,\n    public sources: (OnDiskAsset | InMemoryAsset)[],\n    private resolvableExtensions: RegExp\n  ) {}\n  get sourcemapPath() {\n    return this.relativePath.replace(this.resolvableExtensions, '') + '.map';\n  }\n}\n\ntype InternalAsset = OnDiskAsset | InMemoryAsset | BuiltEmberAsset | ConcatenatedAsset;\n\nexport class AppBuilder<TreeNames> {\n  // for each relativePath, an Asset we have already emitted\n  private assets: Map<string, InternalAsset> = new Map();\n\n  constructor(\n    private root: string,\n    private app: Package,\n    private adapter: AppAdapter<TreeNames>,\n    private options: Required<Options>,\n    private macrosConfig: MacrosConfig\n  ) {\n    // this uses globalConfig because it's a way for packages to ask \"is\n    // Embroider doing this build?\". So it's necessarily global, not scoped to\n    // any subgraph of dependencies.\n    macrosConfig.setGlobalConfig(__filename, `@embroider/core`, {\n      // this is hard-coded to true because it literally means \"embroider is\n      // building this Ember app\". You can see non-true when using the Embroider\n      // macros in a classic build.\n      active: true,\n    });\n  }\n\n  private scriptPriority(pkg: Package) {\n    switch (pkg.name) {\n      case 'loader.js':\n        return 0;\n      case 'ember-source':\n        return 10;\n      default:\n        return 1000;\n    }\n  }\n\n  @Memoize()\n  private get resolvableExtensionsPattern(): RegExp {\n    return extensionsPattern(this.adapter.adjustImportsOptions().resolvableExtensions);\n  }\n\n  private impliedAssets(\n    type: keyof ImplicitAssetPaths,\n    engine: Engine,\n    emberENV?: EmberENV\n  ): (OnDiskAsset | InMemoryAsset)[] {\n    let result: (OnDiskAsset | InMemoryAsset)[] = this.impliedAddonAssets(type, engine).map(\n      (sourcePath: string): OnDiskAsset => {\n        let stats = statSync(sourcePath);\n        return {\n          kind: 'on-disk',\n          relativePath: explicitRelative(this.root, sourcePath),\n          sourcePath,\n          mtime: stats.mtimeMs,\n          size: stats.size,\n        };\n      }\n    );\n\n    if (type === 'implicit-scripts') {\n      result.unshift({\n        kind: 'in-memory',\n        relativePath: '_testing_prefix_.js',\n        source: `var runningTests=false;`,\n      });\n\n      result.unshift({\n        kind: 'in-memory',\n        relativePath: '_ember_env_.js',\n        source: `window.EmberENV={ ...(window.EmberENV || {}), ...${JSON.stringify(emberENV, null, 2)} };`,\n      });\n\n      result.push({\n        kind: 'in-memory',\n        relativePath: '_loader_.js',\n        source: `loader.makeDefaultExport=false;`,\n      });\n    }\n\n    if (type === 'implicit-test-scripts') {\n      // this is the traditional test-support-suffix.js\n      result.push({\n        kind: 'in-memory',\n        relativePath: '_testing_suffix_.js',\n        source: `\n        var runningTests=true;\n        if (typeof Testem !== 'undefined' && (typeof QUnit !== 'undefined' || typeof Mocha !== 'undefined')) {\n          Testem.hookIntoTestFramework();\n        }`,\n      });\n\n      // whether or not anybody was actually using @embroider/macros\n      // explicitly as an addon, we ensure its test-support file is always\n      // present.\n      if (!result.find(s => s.kind === 'on-disk' && s.sourcePath.endsWith('embroider-macros-test-support.js'))) {\n        result.unshift({\n          kind: 'on-disk',\n          sourcePath: require.resolve('@embroider/macros/src/vendor/embroider-macros-test-support'),\n          mtime: 0,\n          size: 0,\n          relativePath: 'embroider-macros-test-support.js',\n        });\n      }\n    }\n\n    return result;\n  }\n\n  private impliedAddonAssets(type: keyof ImplicitAssetPaths, engine: Engine): string[] {\n    let result: Array<string> = [];\n    for (let addon of sortBy(Array.from(engine.addons), this.scriptPriority.bind(this))) {\n      let implicitScripts = addon.meta[type];\n      if (implicitScripts) {\n        let styles = [];\n        let options = { basedir: addon.root };\n        for (let mod of implicitScripts) {\n          if (type === 'implicit-styles') {\n            // exclude engines because they will handle their own css importation\n            if (!addon.isLazyEngine()) {\n              styles.push(resolve.sync(mod, options));\n            }\n          } else {\n            result.push(resolve.sync(mod, options));\n          }\n        }\n        if (styles.length) {\n          result = [...styles, ...result];\n        }\n      }\n    }\n    return result;\n  }\n\n  // unlike our full config, this one just needs to know how to parse all the\n  // syntax our app can contain.\n  @Memoize()\n  private babelParserConfig(): TransformOptions {\n    let babel = cloneDeep(this.adapter.babelConfig());\n\n    if (!babel.plugins) {\n      babel.plugins = [];\n    }\n\n    // Our stage3 code is always allowed to use dynamic import. We may emit it\n    // ourself when splitting routes.\n    babel.plugins.push(require.resolve('@babel/plugin-syntax-dynamic-import'));\n    return babel;\n  }\n\n  @Memoize()\n  private babelConfig(appFiles: Engine[]) {\n    let babel = cloneDeep(this.adapter.babelConfig());\n\n    if (!babel.plugins) {\n      babel.plugins = [];\n    }\n\n    // Our stage3 code is always allowed to use dynamic import. We may emit it\n    // ourself when splitting routes.\n    babel.plugins.push(require.resolve('@babel/plugin-syntax-dynamic-import'));\n\n    // https://github.com/webpack/webpack/issues/12154\n    babel.plugins.push(require.resolve('./rename-require-plugin'));\n\n    babel.plugins.push([require.resolve('babel-plugin-ember-template-compilation'), this.etcOptions()]);\n\n    // this is @embroider/macros configured for full stage3 resolution\n    babel.plugins.push(...this.macrosConfig.babelPluginConfig());\n\n    let colocationOptions: ColocationOptions = {\n      appRoot: this.root,\n\n      // This extra weirdness is a compromise in favor of build performance.\n      //\n      // 1. When auto-upgrading an addon from v1 to v2, we definitely want to\n      //    run any custom AST transforms in stage1.\n      //\n      // 2. In general case, AST transforms are allowed to manipulate Javascript\n      //    scope. This means that running transforms -- even when we're doing\n      //    source-to-source compilation that emits handlebars and not wire\n      //    format -- implies changing .hbs files into .js files.\n      //\n      // 3. So stage1 may need to rewrite .hbs to .hbs.js (to avoid colliding\n      //    with an existing co-located .js file).\n      //\n      // 4. But stage1 doesn't necessarily want to run babel over the\n      //    corresponding JS file. Most of the time, that's just an\n      //    unnecessarily expensive second parse. (We only run it in stage1 to\n      //    eliminate an addon's custom babel plugins, and many addons don't\n      //    have any.)\n      //\n      // 5. Therefore, the work of template-colocation gets defered until here,\n      //    and it may see co-located templates named `.hbs.js` instead of the\n      //    usual `.hbs.\n      templateExtensions: ['.hbs', '.hbs.js'],\n\n      // All of the above only applies to auto-upgraded packages that were\n      // authored in v1. V2 packages don't get any of this complexity, they're\n      // supposed to take care of colocating their own templates explicitly.\n      packageGuard: true,\n    };\n    babel.plugins.push([\n      require.resolve('@embroider/shared-internals/src/template-colocation-plugin'),\n      colocationOptions,\n    ]);\n\n    babel.plugins.push(this.adjustImportsPlugin(appFiles));\n\n    // we can use globally shared babel runtime by default\n    babel.plugins.push([\n      require.resolve('@babel/plugin-transform-runtime'),\n      { absoluteRuntime: __dirname, useESModules: true, regenerator: false },\n    ]);\n\n    const portable = makePortable(babel, { basedir: this.root }, this.portableHints);\n    addCachablePlugin(portable.config);\n    return portable;\n  }\n\n  private adjustImportsPlugin(engines: Engine[]): PluginItem {\n    let relocatedFiles: AdjustImportsOptions['relocatedFiles'] = {};\n    for (let { destPath, appFiles } of engines) {\n      for (let [relativePath, originalPath] of appFiles.relocatedFiles) {\n        relocatedFiles[join(destPath, relativePath)] = originalPath;\n      }\n    }\n    let relocatedFilesPath = join(this.root, '_relocated_files.json');\n    writeFileSync(relocatedFilesPath, JSON.stringify({ relocatedFiles }));\n    return [\n      require.resolve('./babel-plugin-adjust-imports'),\n      {\n        adjustImportsOptionsPath: this.adapter.adjustImportsOptionsPath(),\n        relocatedFilesPath,\n      },\n    ];\n  }\n\n  private insertEmberApp(\n    asset: ParsedEmberAsset,\n    appFiles: Engine[],\n    prepared: Map<string, InternalAsset>,\n    emberENV: EmberENV\n  ) {\n    let html = asset.html;\n\n    if (this.fastbootConfig) {\n      // ignore scripts like ember-cli-livereload.js which are not really associated with\n      // \"the app\".\n      let ignoreScripts = html.dom.window.document.querySelectorAll('script');\n      ignoreScripts.forEach(script => {\n        script.setAttribute('data-fastboot-ignore', '');\n      });\n    }\n\n    // our tests entrypoint already includes a correct module dependency on the\n    // app, so we only insert the app when we're not inserting tests\n    if (!asset.fileAsset.includeTests) {\n      let appJS = this.topAppJSAsset(appFiles, prepared);\n      html.insertScriptTag(html.javascript, appJS.relativePath, { type: 'module' });\n    }\n\n    if (this.fastbootConfig) {\n      // any extra fastboot app files get inserted into our html.javascript\n      // section, after the app has been inserted.\n      for (let script of this.fastbootConfig.extraAppFiles) {\n        html.insertScriptTag(html.javascript, script, { tag: 'fastboot-script' });\n      }\n    }\n\n    html.insertStyleLink(html.styles, `assets/${this.app.name}.css`);\n\n    const parentEngine = appFiles.find(e => !e.parent) as Engine;\n    let vendorJS = this.implicitScriptsAsset(prepared, parentEngine, emberENV);\n    if (vendorJS) {\n      html.insertScriptTag(html.implicitScripts, vendorJS.relativePath);\n    }\n\n    if (this.fastbootConfig) {\n      // any extra fastboot vendor files get inserted into our\n      // html.implicitScripts section, after the regular implicit script\n      // (vendor.js) have been inserted.\n      for (let script of this.fastbootConfig.extraVendorFiles) {\n        html.insertScriptTag(html.implicitScripts, script, { tag: 'fastboot-script' });\n      }\n    }\n\n    let implicitStyles = this.implicitStylesAsset(prepared, parentEngine);\n    if (implicitStyles) {\n      html.insertStyleLink(html.implicitStyles, implicitStyles.relativePath);\n    }\n\n    if (!asset.fileAsset.includeTests) {\n      return;\n    }\n\n    // Test-related assets happen below this point\n\n    let testJS = this.testJSEntrypoint(appFiles, prepared);\n    html.insertScriptTag(html.testJavascript, testJS.relativePath, { type: 'module' });\n\n    let implicitTestScriptsAsset = this.implicitTestScriptsAsset(prepared, parentEngine);\n    if (implicitTestScriptsAsset) {\n      html.insertScriptTag(html.implicitTestScripts, implicitTestScriptsAsset.relativePath);\n    }\n\n    let implicitTestStylesAsset = this.implicitTestStylesAsset(prepared, parentEngine);\n    if (implicitTestStylesAsset) {\n      html.insertStyleLink(html.implicitTestStyles, implicitTestStylesAsset.relativePath);\n    }\n  }\n\n  private implicitScriptsAsset(\n    prepared: Map<string, InternalAsset>,\n    application: Engine,\n    emberENV: EmberENV\n  ): InternalAsset | undefined {\n    let asset = prepared.get('assets/vendor.js');\n    if (!asset) {\n      let implicitScripts = this.impliedAssets('implicit-scripts', application, emberENV);\n      if (implicitScripts.length > 0) {\n        asset = new ConcatenatedAsset('assets/vendor.js', implicitScripts, this.resolvableExtensionsPattern);\n        prepared.set(asset.relativePath, asset);\n      }\n    }\n    return asset;\n  }\n\n  private implicitStylesAsset(prepared: Map<string, InternalAsset>, application: Engine): InternalAsset | undefined {\n    let asset = prepared.get('assets/vendor.css');\n    if (!asset) {\n      let implicitStyles = this.impliedAssets('implicit-styles', application);\n      if (implicitStyles.length > 0) {\n        // we reverse because we want the synthetic vendor style at the top\n        asset = new ConcatenatedAsset('assets/vendor.css', implicitStyles.reverse(), this.resolvableExtensionsPattern);\n        prepared.set(asset.relativePath, asset);\n      }\n    }\n    return asset;\n  }\n\n  private implicitTestScriptsAsset(\n    prepared: Map<string, InternalAsset>,\n    application: Engine\n  ): InternalAsset | undefined {\n    let testSupportJS = prepared.get('assets/test-support.js');\n    if (!testSupportJS) {\n      let implicitTestScripts = this.impliedAssets('implicit-test-scripts', application);\n      if (implicitTestScripts.length > 0) {\n        testSupportJS = new ConcatenatedAsset(\n          'assets/test-support.js',\n          implicitTestScripts,\n          this.resolvableExtensionsPattern\n        );\n        prepared.set(testSupportJS.relativePath, testSupportJS);\n      }\n    }\n    return testSupportJS;\n  }\n\n  private implicitTestStylesAsset(\n    prepared: Map<string, InternalAsset>,\n    application: Engine\n  ): InternalAsset | undefined {\n    let asset = prepared.get('assets/test-support.css');\n    if (!asset) {\n      let implicitTestStyles = this.impliedAssets('implicit-test-styles', application);\n      if (implicitTestStyles.length > 0) {\n        asset = new ConcatenatedAsset('assets/test-support.css', implicitTestStyles, this.resolvableExtensionsPattern);\n        prepared.set(asset.relativePath, asset);\n      }\n    }\n    return asset;\n  }\n\n  // recurse to find all active addons that don't cross an engine boundary.\n  // Inner engines themselves will be returned, but not those engines' children.\n  // The output set's insertion order is the proper ember-cli compatible\n  // ordering of the addons.\n  private findActiveAddons(pkg: Package, engine: EngineSummary, isChild = false): void {\n    for (let child of this.adapter.activeAddonChildren(pkg)) {\n      if (!child.isEngine()) {\n        this.findActiveAddons(child, engine, true);\n      }\n      engine.addons.add(child);\n    }\n    // ensure addons are applied in the correct order, if set (via @embroider/compat/v1-addon)\n    if (!isChild) {\n      engine.addons = new Set(\n        [...engine.addons].sort((a, b) => {\n          return (a.meta['order-index'] || 0) - (b.meta['order-index'] || 0);\n        })\n      );\n    }\n  }\n\n  private partitionEngines(appJSPath: string): EngineSummary[] {\n    let queue: EngineSummary[] = [\n      {\n        package: this.app,\n        addons: new Set(),\n        parent: undefined,\n        sourcePath: appJSPath,\n        destPath: this.root,\n        modulePrefix: this.modulePrefix,\n        appRelativePath: '.',\n      },\n    ];\n    let done: EngineSummary[] = [];\n    let seenEngines: Set<Package> = new Set();\n    while (true) {\n      let current = queue.shift();\n      if (!current) {\n        break;\n      }\n      this.findActiveAddons(current.package, current);\n      for (let addon of current.addons) {\n        if (addon.isEngine() && !seenEngines.has(addon)) {\n          seenEngines.add(addon);\n          queue.push({\n            package: addon,\n            addons: new Set(),\n            parent: current,\n            sourcePath: mangledEngineRoot(addon),\n            destPath: addon.root,\n            modulePrefix: addon.name,\n            appRelativePath: explicitRelative(this.root, addon.root),\n          });\n        }\n      }\n      done.push(current);\n    }\n    return done;\n  }\n\n  @Memoize()\n  private get activeFastboot() {\n    return this.adapter.activeAddonChildren(this.app).find(a => a.name === 'ember-cli-fastboot');\n  }\n\n  @Memoize()\n  private get fastbootConfig():\n    | { packageJSON: PackageInfo; extraAppFiles: string[]; extraVendorFiles: string[] }\n    | undefined {\n    if (this.activeFastboot) {\n      // this is relying on work done in stage1 by @embroider/compat/src/compat-adapters/ember-cli-fastboot.ts\n      let packageJSON = readJSONSync(join(this.activeFastboot.root, '_fastboot_', 'package.json'));\n      let { extraAppFiles, extraVendorFiles } = packageJSON['embroider-fastboot'];\n      delete packageJSON['embroider-fastboot'];\n      extraVendorFiles.push('assets/embroider_macros_fastboot_init.js');\n      return { packageJSON, extraAppFiles, extraVendorFiles };\n    }\n  }\n\n  private appDiffers: { differ: AppDiffer; engine: EngineSummary }[] | undefined;\n\n  private updateAppJS(inputPaths: OutputPaths<TreeNames>): Engine[] {\n    let appJSPath = this.adapter.appJSSrcDir(inputPaths);\n    if (!this.appDiffers) {\n      let engines = this.partitionEngines(appJSPath);\n      this.appDiffers = engines.map(engine => {\n        let differ: AppDiffer;\n        if (this.activeFastboot) {\n          differ = new AppDiffer(\n            engine.destPath,\n            engine.sourcePath,\n            [...engine.addons],\n            true,\n            this.adapter.fastbootJSSrcDir(inputPaths),\n            this.babelParserConfig()\n          );\n        } else {\n          differ = new AppDiffer(engine.destPath, engine.sourcePath, [...engine.addons]);\n        }\n        return {\n          differ,\n          engine,\n        };\n      });\n    }\n    // this is in reverse order because we need deeper engines to update before\n    // their parents, because they aren't really valid packages until they\n    // update, and their parents will go looking for their own `app-js` content.\n    this.appDiffers\n      .slice()\n      .reverse()\n      .forEach(a => a.differ.update());\n    return this.appDiffers.map(a => {\n      return Object.assign({}, a.engine, {\n        appFiles: new AppFiles(a.differ, this.resolvableExtensionsPattern, this.adapter.podModulePrefix()),\n      });\n    });\n  }\n\n  private prepareAsset(asset: Asset, appFiles: Engine[], prepared: Map<string, InternalAsset>, emberENV: EmberENV) {\n    if (asset.kind === 'ember') {\n      let prior = this.assets.get(asset.relativePath);\n      let parsed: ParsedEmberAsset;\n      if (prior && prior.kind === 'built-ember' && prior.parsedAsset.validFor(asset)) {\n        // we can reuse the parsed html\n        parsed = prior.parsedAsset;\n        parsed.html.clear();\n      } else {\n        parsed = new ParsedEmberAsset(asset);\n      }\n      this.insertEmberApp(parsed, appFiles, prepared, emberENV);\n      prepared.set(asset.relativePath, new BuiltEmberAsset(parsed));\n    } else {\n      prepared.set(asset.relativePath, asset);\n    }\n  }\n\n  private prepareAssets(requestedAssets: Asset[], appFiles: Engine[], emberENV: EmberENV): Map<string, InternalAsset> {\n    let prepared: Map<string, InternalAsset> = new Map();\n    for (let asset of requestedAssets) {\n      this.prepareAsset(asset, appFiles, prepared, emberENV);\n    }\n    return prepared;\n  }\n\n  private assetIsValid(asset: InternalAsset, prior: InternalAsset | undefined): boolean {\n    if (!prior) {\n      return false;\n    }\n    switch (asset.kind) {\n      case 'on-disk':\n        return prior.kind === 'on-disk' && prior.size === asset.size && prior.mtime === asset.mtime;\n      case 'in-memory':\n        return prior.kind === 'in-memory' && stringOrBufferEqual(prior.source, asset.source);\n      case 'built-ember':\n        return prior.kind === 'built-ember' && prior.source === asset.source;\n      case 'concatenated-asset':\n        return (\n          prior.kind === 'concatenated-asset' &&\n          prior.sources.length === asset.sources.length &&\n          prior.sources.every((priorFile, index) => {\n            let newFile = asset.sources[index];\n            return this.assetIsValid(newFile, priorFile);\n          })\n        );\n    }\n  }\n\n  private updateOnDiskAsset(asset: OnDiskAsset) {\n    let destination = join(this.root, asset.relativePath);\n    ensureDirSync(dirname(destination));\n    copySync(asset.sourcePath, destination, { dereference: true });\n  }\n\n  private updateInMemoryAsset(asset: InMemoryAsset) {\n    let destination = join(this.root, asset.relativePath);\n    ensureDirSync(dirname(destination));\n    writeFileSync(destination, asset.source, 'utf8');\n  }\n\n  private updateBuiltEmberAsset(asset: BuiltEmberAsset) {\n    let destination = join(this.root, asset.relativePath);\n    ensureDirSync(dirname(destination));\n    writeFileSync(destination, asset.source, 'utf8');\n  }\n\n  private async updateConcatenatedAsset(asset: ConcatenatedAsset) {\n    let concat = new SourceMapConcat({\n      outputFile: join(this.root, asset.relativePath),\n      mapCommentType: asset.relativePath.endsWith('.js') ? 'line' : 'block',\n      baseDir: this.root,\n    });\n    if (process.env.EMBROIDER_CONCAT_STATS) {\n      let MeasureConcat = (await import('./measure-concat')).default;\n      concat = new MeasureConcat(asset.relativePath, concat, this.root);\n    }\n    for (let source of asset.sources) {\n      switch (source.kind) {\n        case 'on-disk':\n          concat.addFile(explicitRelative(this.root, source.sourcePath));\n          break;\n        case 'in-memory':\n          if (typeof source.source !== 'string') {\n            throw new Error(`attempted to concatenated a Buffer-backed in-memory asset`);\n          }\n          concat.addSpace(source.source);\n          break;\n        default:\n          assertNever(source);\n      }\n    }\n    await concat.end();\n  }\n\n  private async updateAssets(requestedAssets: Asset[], appFiles: Engine[], emberENV: EmberENV) {\n    let assets = this.prepareAssets(requestedAssets, appFiles, emberENV);\n    for (let asset of assets.values()) {\n      if (this.assetIsValid(asset, this.assets.get(asset.relativePath))) {\n        continue;\n      }\n      debug('rebuilding %s', asset.relativePath);\n      switch (asset.kind) {\n        case 'on-disk':\n          this.updateOnDiskAsset(asset);\n          break;\n        case 'in-memory':\n          this.updateInMemoryAsset(asset);\n          break;\n        case 'built-ember':\n          this.updateBuiltEmberAsset(asset);\n          break;\n        case 'concatenated-asset':\n          await this.updateConcatenatedAsset(asset);\n          break;\n        default:\n          assertNever(asset);\n      }\n    }\n    for (let oldAsset of this.assets.values()) {\n      if (!assets.has(oldAsset.relativePath)) {\n        unlinkSync(join(this.root, oldAsset.relativePath));\n      }\n    }\n    this.assets = assets;\n    return [...assets.values()];\n  }\n\n  private gatherAssets(inputPaths: OutputPaths<TreeNames>): Asset[] {\n    // first gather all the assets out of addons\n    let assets: Asset[] = [];\n    for (let pkg of this.adapter.allActiveAddons) {\n      if (pkg.meta['public-assets']) {\n        for (let [filename, appRelativeURL] of Object.entries(pkg.meta['public-assets'] || {})) {\n          let sourcePath = resolvePath(pkg.root, filename);\n          let stats = statSync(sourcePath);\n          assets.push({\n            kind: 'on-disk',\n            sourcePath,\n            relativePath: appRelativeURL,\n            mtime: stats.mtimeMs,\n            size: stats.size,\n          });\n        }\n      }\n    }\n\n    if (this.activeFastboot) {\n      const source = `\n      (function(){\n        var key = '_embroider_macros_runtime_config';\n        if (!window[key]){ window[key] = [];}\n        window[key].push(function(m) {\n          m.setGlobalConfig('fastboot', Object.assign({}, m.getGlobalConfig().fastboot, { isRunning: true }));\n        });\n      }())`;\n      assets.push({\n        kind: 'in-memory',\n        source,\n        relativePath: 'assets/embroider_macros_fastboot_init.js',\n      });\n    }\n\n    // and finally tack on the ones from our app itself\n    return assets.concat(this.adapter.assets(inputPaths));\n  }\n\n  async build(inputPaths: OutputPaths<TreeNames>) {\n    if (this.adapter.env !== 'production') {\n      this.macrosConfig.enablePackageDevelopment(this.root);\n      this.macrosConfig.enableRuntimeMode();\n    }\n    for (let pkgRoot of this.adapter.developingAddons()) {\n      this.macrosConfig.enablePackageDevelopment(pkgRoot);\n    }\n\n    // on the first build, we lock down the macros config. on subsequent builds,\n    // this doesn't do anything anyway because it's idempotent.\n    this.macrosConfig.finalize();\n\n    let appFiles = this.updateAppJS(inputPaths);\n    let emberENV = this.adapter.emberENV();\n    let assets = this.gatherAssets(inputPaths);\n\n    let finalAssets = await this.updateAssets(assets, appFiles, emberENV);\n    let babelConfig = this.babelConfig(appFiles);\n    this.addBabelConfig(babelConfig);\n\n    let assetPaths = assets.map(asset => asset.relativePath);\n\n    if (this.activeFastboot) {\n      // when using fastboot, our own package.json needs to be in the output so fastboot can read it.\n      assetPaths.push('package.json');\n    }\n\n    for (let asset of finalAssets) {\n      // our concatenated assets all have map files that ride along. Here we're\n      // telling the final stage packager to be sure and serve the map files\n      // too.\n      if (asset.kind === 'concatenated-asset') {\n        assetPaths.push(asset.sourcemapPath);\n      }\n    }\n\n    let meta: AppMeta = {\n      type: 'app',\n      version: 2,\n      assets: assetPaths,\n      babel: {\n        filename: '_babel_config_.js',\n        isParallelSafe: babelConfig.isParallelSafe,\n        majorVersion: this.adapter.babelMajorVersion(),\n        fileFilter: '_babel_filter_.js',\n      },\n      'resolvable-extensions': this.adapter.adjustImportsOptions().resolvableExtensions,\n      'root-url': this.adapter.rootURL(),\n    };\n\n    if (!this.adapter.strictV2Format()) {\n      meta['auto-upgraded'] = true;\n    }\n\n    let pkg = this.combinePackageJSON(meta);\n    writeFileSync(join(this.root, 'package.json'), JSON.stringify(pkg, null, 2), 'utf8');\n  }\n\n  private combinePackageJSON(meta: AppMeta): object {\n    let pkgLayers: any[] = [this.app.packageJSON];\n    let fastbootConfig = this.fastbootConfig;\n    if (fastbootConfig) {\n      // fastboot-specific package.json output is allowed to add to our original package.json\n      pkgLayers.push(fastbootConfig.packageJSON);\n    }\n    // but our own new v2 app metadata takes precedence over both\n    pkgLayers.push({ keywords: ['ember-addon'], 'ember-addon': meta });\n    return combinePackageJSON(...pkgLayers);\n  }\n\n  private etcOptions(): EtcOptions {\n    let transforms = this.adapter.htmlbarsPlugins();\n\n    let { plugins: macroPlugins, setConfig } = MacrosConfig.transforms();\n    setConfig(this.macrosConfig);\n    for (let macroPlugin of macroPlugins) {\n      transforms.push(macroPlugin as any);\n    }\n\n    let transform = this.adapter.resolverTransform();\n    if (transform) {\n      transforms.push(transform);\n    }\n\n    return {\n      transforms,\n      compilerPath: resolve.sync(this.adapter.templateCompilerPath(), { basedir: this.root }),\n      enableLegacyModules: ['ember-cli-htmlbars', 'ember-cli-htmlbars-inline-precompile', 'htmlbars-inline-precompile'],\n    };\n  }\n\n  @Memoize()\n  private get portableHints(): PortableHint[] {\n    return this.options.pluginHints.map(hint => {\n      let cursor = join(this.app.root, 'package.json');\n      for (let i = 0; i < hint.resolve.length; i++) {\n        let target = hint.resolve[i];\n        if (i < hint.resolve.length - 1) {\n          target = join(target, 'package.json');\n        }\n        cursor = resolve.sync(target, { basedir: dirname(cursor) });\n      }\n\n      return {\n        requireFile: cursor,\n        useMethod: hint.useMethod,\n        packageVersion: maybeNodeModuleVersion(cursor),\n      };\n    });\n  }\n\n  private addBabelConfig(pconfig: { config: TransformOptions; isParallelSafe: boolean }) {\n    if (!pconfig.isParallelSafe) {\n      warn('Your build is slower because some babel plugins are non-serializable');\n    }\n    writeFileSync(\n      join(this.root, '_babel_config_.js'),\n      `module.exports = ${JSON.stringify(pconfig.config, null, 2)}`,\n      'utf8'\n    );\n    writeFileSync(\n      join(this.root, '_babel_filter_.js'),\n      babelFilterTemplate({ skipBabel: this.options.skipBabel, appRoot: this.root }),\n      'utf8'\n    );\n  }\n\n  private shouldSplitRoute(routeName: string) {\n    return (\n      !this.options.splitAtRoutes ||\n      this.options.splitAtRoutes.find(pattern => {\n        if (typeof pattern === 'string') {\n          return pattern === routeName;\n        } else {\n          return pattern.test(routeName);\n        }\n      })\n    );\n  }\n\n  private splitRoute(\n    routeName: string,\n    files: RouteFiles,\n    addToParent: (routeName: string, filename: string) => void,\n    addLazyBundle: (routeNames: string[], files: string[]) => void\n  ) {\n    let shouldSplit = routeName && this.shouldSplitRoute(routeName);\n    let ownFiles = [];\n    let ownNames = new Set() as Set<string>;\n\n    if (files.template) {\n      if (shouldSplit) {\n        ownFiles.push(files.template);\n        ownNames.add(routeName);\n      } else {\n        addToParent(routeName, files.template);\n      }\n    }\n\n    if (files.controller) {\n      if (shouldSplit) {\n        ownFiles.push(files.controller);\n        ownNames.add(routeName);\n      } else {\n        addToParent(routeName, files.controller);\n      }\n    }\n\n    if (files.route) {\n      if (shouldSplit) {\n        ownFiles.push(files.route);\n        ownNames.add(routeName);\n      } else {\n        addToParent(routeName, files.route);\n      }\n    }\n\n    for (let [childName, childFiles] of files.children) {\n      this.splitRoute(\n        `${routeName}.${childName}`,\n        childFiles,\n\n        (childRouteName: string, childFile: string) => {\n          // this is our child calling \"addToParent\"\n          if (shouldSplit) {\n            ownFiles.push(childFile);\n            ownNames.add(childRouteName);\n          } else {\n            addToParent(childRouteName, childFile);\n          }\n        },\n        (routeNames: string[], files: string[]) => {\n          addLazyBundle(routeNames, files);\n        }\n      );\n    }\n\n    if (ownFiles.length > 0) {\n      addLazyBundle([...ownNames], ownFiles);\n    }\n  }\n\n  private topAppJSAsset(engines: Engine[], prepared: Map<string, InternalAsset>): InternalAsset {\n    let [app, ...childEngines] = engines;\n    let relativePath = `assets/${this.app.name}.js`;\n    return this.appJSAsset(relativePath, app, childEngines, prepared, {\n      autoRun: this.adapter.autoRun(),\n      appBoot: !this.adapter.autoRun() ? this.adapter.appBoot() : '',\n      mainModule: explicitRelative(dirname(relativePath), this.adapter.mainModule()),\n      appConfig: this.adapter.mainModuleConfig(),\n    });\n  }\n\n  @Memoize()\n  private get staticAppPathsPattern(): RegExp | undefined {\n    if (this.options.staticAppPaths.length > 0) {\n      return new RegExp(\n        '^(?:' + this.options.staticAppPaths.map(staticAppPath => escapeRegExp(staticAppPath)).join('|') + ')(?:$|/)'\n      );\n    }\n  }\n\n  private requiredOtherFiles(appFiles: AppFiles): readonly string[] {\n    let pattern = this.staticAppPathsPattern;\n    if (pattern) {\n      return appFiles.otherAppFiles.filter(f => {\n        return !pattern!.test(f);\n      });\n    } else {\n      return appFiles.otherAppFiles;\n    }\n  }\n\n  private appJSAsset(\n    relativePath: string,\n    engine: Engine,\n    childEngines: Engine[],\n    prepared: Map<string, InternalAsset>,\n    entryParams?: Partial<Parameters<typeof entryTemplate>[0]>\n  ): InternalAsset {\n    let { appFiles } = engine;\n    let cached = prepared.get(relativePath);\n    if (cached) {\n      return cached;\n    }\n\n    let eagerModules = [];\n\n    let requiredAppFiles = [this.requiredOtherFiles(appFiles)];\n    if (!this.options.staticComponents) {\n      requiredAppFiles.push(appFiles.components);\n    }\n    if (!this.options.staticHelpers) {\n      requiredAppFiles.push(appFiles.helpers);\n    }\n    if (!this.options.staticModifiers) {\n      requiredAppFiles.push(appFiles.modifiers);\n    }\n\n    let styles = [];\n    // only import styles from engines with a parent (this excludeds the parent application) as their styles\n    // will be inserted via a direct <link> tag.\n    if (engine.parent && engine.package.isLazyEngine()) {\n      let implicitStyles = this.impliedAssets('implicit-styles', engine);\n      for (let style of implicitStyles) {\n        styles.push({\n          path: explicitRelative('assets/_engine_', style.relativePath),\n        });\n      }\n\n      let engineMeta = engine.package.meta as AddonMeta;\n      if (engineMeta && engineMeta['implicit-styles']) {\n        for (let style of engineMeta['implicit-styles']) {\n          styles.push({\n            path: explicitRelative(dirname(relativePath), join(engine.appRelativePath, style)),\n          });\n        }\n      }\n    }\n\n    let lazyEngines: { names: string[]; path: string }[] = [];\n    for (let childEngine of childEngines) {\n      let asset = this.appJSAsset(\n        `assets/_engine_/${encodeURIComponent(childEngine.package.name)}.js`,\n        childEngine,\n        [],\n        prepared\n      );\n      if (childEngine.package.isLazyEngine()) {\n        lazyEngines.push({\n          names: [childEngine.package.name],\n          path: explicitRelative(dirname(relativePath), asset.relativePath),\n        });\n      } else {\n        eagerModules.push(explicitRelative(dirname(relativePath), asset.relativePath));\n      }\n    }\n    let lazyRoutes: { names: string[]; path: string }[] = [];\n    for (let [routeName, routeFiles] of appFiles.routeFiles.children) {\n      this.splitRoute(\n        routeName,\n        routeFiles,\n        (_: string, filename: string) => {\n          requiredAppFiles.push([filename]);\n        },\n        (routeNames: string[], files: string[]) => {\n          let routeEntrypoint = `assets/_route_/${encodeURIComponent(routeNames[0])}.js`;\n          if (!prepared.has(routeEntrypoint)) {\n            prepared.set(routeEntrypoint, this.routeEntrypoint(engine, routeEntrypoint, files));\n          }\n          lazyRoutes.push({\n            names: routeNames,\n            path: this.importPaths(engine, routeEntrypoint, relativePath).buildtime,\n          });\n        }\n      );\n    }\n\n    let [fastboot, nonFastboot] = partition(excludeDotFiles(flatten(requiredAppFiles)), file =>\n      appFiles.isFastbootOnly.get(file)\n    );\n    let amdModules = nonFastboot.map(file => this.importPaths(engine, file, relativePath));\n    let fastbootOnlyAmdModules = fastboot.map(file => this.importPaths(engine, file, relativePath));\n\n    // this is a backward-compatibility feature: addons can force inclusion of\n    // modules.\n    this.gatherImplicitModules('implicit-modules', relativePath, engine, amdModules);\n\n    let params = { amdModules, fastbootOnlyAmdModules, lazyRoutes, lazyEngines, eagerModules, styles };\n    if (entryParams) {\n      Object.assign(params, entryParams);\n    }\n\n    let source = entryTemplate(params);\n\n    let asset: InternalAsset = {\n      kind: 'in-memory',\n      source,\n      relativePath,\n    };\n    prepared.set(relativePath, asset);\n    return asset;\n  }\n\n  @Memoize()\n  private get modulePrefix() {\n    return this.adapter.modulePrefix();\n  }\n\n  private importPaths(engine: Engine, engineRelativePath: string, fromFile: string) {\n    let appRelativePath = join(engine.appRelativePath, engineRelativePath);\n    let noHBS = engineRelativePath.replace(this.resolvableExtensionsPattern, '').replace(/\\.hbs$/, '');\n    return {\n      runtime: `${engine.modulePrefix}/${noHBS}`,\n      buildtime: explicitRelative(dirname(fromFile), appRelativePath),\n    };\n  }\n\n  private routeEntrypoint(engine: Engine, relativePath: string, files: string[]) {\n    let [fastboot, nonFastboot] = partition(files, file => engine.appFiles.isFastbootOnly.get(file));\n\n    let asset: InternalAsset = {\n      kind: 'in-memory',\n      source: routeEntryTemplate({\n        files: nonFastboot.map(f => this.importPaths(engine, f, relativePath)),\n        fastbootOnlyFiles: fastboot.map(f => this.importPaths(engine, f, relativePath)),\n      }),\n      relativePath,\n    };\n    return asset;\n  }\n\n  private testJSEntrypoint(engines: Engine[], prepared: Map<string, InternalAsset>): InternalAsset {\n    let asset = prepared.get(`assets/test.js`);\n    if (asset) {\n      return asset;\n    }\n\n    // We're only building tests from the first engine (the app). This is the\n    // normal thing to do -- tests from engines don't automatically roll up into\n    // the app.\n    let engine = engines[0];\n\n    const myName = 'assets/test.js';\n\n    // tests necessarily also include the app. This is where we account for\n    // that. The classic solution was to always include the app's separate\n    // script tag in the tests HTML, but that isn't as easy for final stage\n    // packagers to understand. It's better to express it here as a direct\n    // module dependency.\n    let eagerModules: string[] = [\n      explicitRelative(dirname(myName), this.topAppJSAsset(engines, prepared).relativePath),\n    ];\n\n    let amdModules: { runtime: string; buildtime: string }[] = [];\n    // this is a backward-compatibility feature: addons can force inclusion of\n    // test support modules.\n    this.gatherImplicitModules('implicit-test-modules', myName, engine, amdModules);\n\n    let { appFiles } = engine;\n    for (let relativePath of appFiles.tests) {\n      amdModules.push(this.importPaths(engine, relativePath, myName));\n    }\n\n    let source = entryTemplate({\n      amdModules,\n      eagerModules,\n      testSuffix: true,\n    });\n\n    asset = {\n      kind: 'in-memory',\n      source,\n      relativePath: myName,\n    };\n    prepared.set(asset.relativePath, asset);\n    return asset;\n  }\n\n  private gatherImplicitModules(\n    section: 'implicit-modules' | 'implicit-test-modules',\n    relativeTo: string,\n    engine: Engine,\n    lazyModules: { runtime: string; buildtime: string }[]\n  ) {\n    for (let addon of engine.addons) {\n      let implicitModules = addon.meta[section];\n      if (implicitModules) {\n        let renamedModules = inverseRenamedModules(addon.meta, this.resolvableExtensionsPattern);\n        for (let name of implicitModules) {\n          let packageName = addon.name;\n\n          if (addon.isV2Addon()) {\n            let renamedMeta = addon.meta['renamed-packages'];\n            if (renamedMeta) {\n              Object.entries(renamedMeta).forEach(([key, value]) => {\n                if (value === addon!.name) {\n                  packageName = key;\n                }\n              });\n            }\n          }\n\n          let runtime = join(packageName, name).replace(this.resolvableExtensionsPattern, '');\n          let runtimeRenameLookup = runtime.split('\\\\').join('/');\n          if (renamedModules && renamedModules[runtimeRenameLookup]) {\n            runtime = renamedModules[runtimeRenameLookup];\n          }\n          runtime = runtime.split(sep).join('/');\n          lazyModules.push({\n            runtime,\n            buildtime:\n              this.options.implicitModulesStrategy === 'packageNames'\n                ? join(packageName, name)\n                : explicitRelative(dirname(join(this.root, relativeTo)), join(addon.root, name)),\n          });\n        }\n      }\n    }\n  }\n}\n\nconst entryTemplate = compile(`\nimport { importSync as i, macroCondition, getGlobalConfig } from '@embroider/macros';\nlet w = window;\nlet d = w.define;\n\n{{#if styles}}\n  if (macroCondition(!getGlobalConfig().fastboot?.isRunning)) {\n    {{#each styles as |stylePath| ~}}\n      i(\"{{js-string-escape stylePath.path}}\");\n    {{/each}}\n  }\n{{/if}}\n\n{{#each amdModules as |amdModule| ~}}\n  d(\"{{js-string-escape amdModule.runtime}}\", function(){ return i(\"{{js-string-escape amdModule.buildtime}}\");});\n{{/each}}\n\n{{#if fastbootOnlyAmdModules}}\n  if (macroCondition(getGlobalConfig().fastboot?.isRunning)) {\n    {{#each fastbootOnlyAmdModules as |amdModule| ~}}\n      d(\"{{js-string-escape amdModule.runtime}}\", function(){ return i(\"{{js-string-escape amdModule.buildtime}}\");});\n    {{/each}}\n  }\n{{/if}}\n\n{{#each eagerModules as |eagerModule| ~}}\n  i(\"{{js-string-escape eagerModule}}\");\n{{/each}}\n\n{{#if lazyRoutes}}\nw._embroiderRouteBundles_ = [\n  {{#each lazyRoutes as |route|}}\n  {\n    names: {{{json-stringify route.names}}},\n    load: function() {\n      return import(\"{{js-string-escape route.path}}\");\n    }\n  },\n  {{/each}}\n]\n{{/if}}\n\n{{#if lazyEngines}}\nw._embroiderEngineBundles_ = [\n  {{#each lazyEngines as |engine|}}\n  {\n    names: {{{json-stringify engine.names}}},\n    load: function() {\n      return import(\"{{js-string-escape engine.path}}\");\n    }\n  },\n  {{/each}}\n]\n{{/if}}\n\n{{#if autoRun ~}}\nif (!runningTests) {\n  i(\"{{js-string-escape mainModule}}\").default.create({{{json-stringify appConfig}}});\n}\n{{else  if appBoot ~}}\n  {{{ appBoot }}}\n{{/if}}\n\n{{#if testSuffix ~}}\n  {{!- TODO: both of these suffixes should get dynamically generated so they incorporate\n       any content-for added by addons. -}}\n\n\n  {{!- this is the traditional tests-suffix.js -}}\n  i('../tests/test-helper');\n  EmberENV.TESTS_FILE_LOADED = true;\n{{/if}}\n`) as (params: {\n  amdModules: { runtime: string; buildtime: string }[];\n  fastbootOnlyAmdModules?: { runtime: string; buildtime: string }[];\n  eagerModules?: string[];\n  autoRun?: boolean;\n  appBoot?: string;\n  mainModule?: string;\n  appConfig?: unknown;\n  testSuffix?: boolean;\n  lazyRoutes?: { names: string[]; path: string }[];\n  lazyEngines?: { names: string[]; path: string }[];\n  styles?: { path: string }[];\n}) => string;\n\nconst routeEntryTemplate = compile(`\nimport { importSync as i } from '@embroider/macros';\nlet d = window.define;\n{{#each files as |amdModule| ~}}\nd(\"{{js-string-escape amdModule.runtime}}\", function(){ return i(\"{{js-string-escape amdModule.buildtime}}\");});\n{{/each}}\n{{#if fastbootOnlyFiles}}\n  import { macroCondition, getGlobalConfig } from '@embroider/macros';\n  if (macroCondition(getGlobalConfig().fastboot?.isRunning)) {\n    {{#each fastbootOnlyFiles as |amdModule| ~}}\n    d(\"{{js-string-escape amdModule.runtime}}\", function(){ return i(\"{{js-string-escape amdModule.buildtime}}\");});\n    {{/each}}\n  }\n{{/if}}\n`) as (params: {\n  files: { runtime: string; buildtime: string }[];\n  fastbootOnlyFiles: { runtime: string; buildtime: string }[];\n}) => string;\n\nfunction stringOrBufferEqual(a: string | Buffer, b: string | Buffer): boolean {\n  if (typeof a === 'string' && typeof b === 'string') {\n    return a === b;\n  }\n  if (a instanceof Buffer && b instanceof Buffer) {\n    return Buffer.compare(a, b) === 0;\n  }\n  return false;\n}\n\nconst babelFilterTemplate = compile(`\nconst { babelFilter } = require(${JSON.stringify(require.resolve('./index.js'))});\nmodule.exports = babelFilter({{{json-stringify skipBabel}}}, \"{{{js-string-escape appRoot}}}\");\n`) as (params: { skipBabel: Options['skipBabel']; appRoot: string }) => string;\n\n// meta['renamed-modules'] has mapping from classic filename to real filename.\n// This takes that and converts it to the inverst mapping from real import path\n// to classic import path.\nfunction inverseRenamedModules(meta: AddonPackage['meta'], extensions: RegExp) {\n  let renamed = meta['renamed-modules'];\n  if (renamed) {\n    let inverted = {} as { [name: string]: string };\n    for (let [classic, real] of Object.entries(renamed)) {\n      inverted[real.replace(extensions, '')] = classic.replace(extensions, '');\n    }\n    return inverted;\n  }\n}\n\nfunction combinePackageJSON(...layers: object[]) {\n  function custom(objValue: any, srcValue: any, key: string, _object: any, _source: any, stack: { size: number }) {\n    if (key === 'keywords' && stack.size === 0) {\n      if (Array.isArray(objValue)) {\n        return objValue.concat(srcValue);\n      }\n    }\n  }\n  return mergeWith({}, ...layers, custom);\n}\n"]}