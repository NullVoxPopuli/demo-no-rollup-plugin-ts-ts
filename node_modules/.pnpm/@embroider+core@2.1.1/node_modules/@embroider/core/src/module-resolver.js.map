{"version":3,"file":"module-resolver.js","sourceRoot":"","sources":["module-resolver.ts"],"names":[],"mappings":"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","sourcesContent":["import { emberVirtualPackages, emberVirtualPeerDeps, packageName as getPackageName } from '@embroider/shared-internals';\nimport { dirname, resolve } from 'path';\nimport { PackageCache, Package, V2Package, explicitRelative } from '@embroider/shared-internals';\nimport { Memoize } from 'typescript-memoize';\n\nexport interface Options {\n  renamePackages: {\n    [fromName: string]: string;\n  };\n  renameModules: {\n    [fromName: string]: string;\n  };\n  extraImports: {\n    absPath: string;\n    target: string;\n    runtimeName?: string;\n  }[];\n  externalsDir: string;\n  activeAddons: {\n    [packageName: string]: string;\n  };\n  relocatedFiles: { [relativePath: string]: string };\n  resolvableExtensions: string[];\n  appRoot: string;\n}\n\nexport type Resolution =\n  | { result: 'continue' }\n  | { result: 'redirect-to'; specifier: string }\n  | { result: 'external'; specifier: string }\n  | { result: 'runtime-failure'; specifier: string };\n\nexport class Resolver {\n  readonly originalFilename: string;\n\n  constructor(readonly filename: string, private options: Options) {\n    this.originalFilename = options.relocatedFiles[filename] || filename;\n  }\n  resolve(specifier: string, isDynamic: boolean): Resolution {\n    if (specifier === '@embroider/macros') {\n      // the macros package is always handled directly within babel (not\n      // necessarily as a real resolvable package), so we should not mess with it.\n      // It might not get compiled away until *after* our plugin has run, which is\n      // why we need to know about it.\n      return { result: 'continue' };\n    }\n\n    let maybeRenamed = this.handleRenaming(specifier);\n    let resolution = this.handleExternal(maybeRenamed, isDynamic);\n    if (resolution.result === 'continue' && maybeRenamed !== specifier) {\n      return { result: 'redirect-to', specifier: maybeRenamed };\n    }\n    return resolution;\n  }\n\n  @Memoize()\n  owningPackage(): Package | undefined {\n    return PackageCache.shared('embroider-stage3', this.options.appRoot).ownerOfFile(this.originalFilename);\n  }\n\n  @Memoize()\n  private relocatedIntoPackage(): V2Package | undefined {\n    if (this.originalFilename !== this.filename) {\n      let owning = PackageCache.shared('embroider-stage3', this.options.appRoot).ownerOfFile(this.filename);\n      if (owning && !owning.isV2Ember()) {\n        throw new Error(`bug: it should only be possible to get relocated into a v2 ember package here`);\n      }\n      return owning;\n    }\n  }\n\n  private handleRenaming(specifier: string) {\n    let packageName = getPackageName(specifier);\n    if (!packageName) {\n      return specifier;\n    }\n\n    for (let [candidate, replacement] of Object.entries(this.options.renameModules)) {\n      if (candidate === specifier) {\n        return replacement;\n      }\n      for (let extension of this.options.resolvableExtensions) {\n        if (candidate === specifier + '/index' + extension) {\n          return replacement;\n        }\n        if (candidate === specifier + extension) {\n          return replacement;\n        }\n      }\n    }\n\n    if (this.options.renamePackages[packageName]) {\n      return specifier.replace(packageName, this.options.renamePackages[packageName]);\n    }\n\n    let pkg = this.owningPackage();\n    if (!pkg || !pkg.isV2Ember()) {\n      return specifier;\n    }\n\n    if (pkg.meta['auto-upgraded'] && pkg.name === packageName) {\n      // we found a self-import, make it relative. Only auto-upgraded packages get\n      // this help, v2 packages are natively supposed to use relative imports for\n      // their own modules, and we want to push them all to do that correctly.\n      let fullPath = specifier.replace(packageName, pkg.root);\n      return explicitRelative(dirname(this.filename), fullPath);\n    }\n\n    let relocatedIntoPkg = this.relocatedIntoPackage();\n    if (relocatedIntoPkg && pkg.meta['auto-upgraded'] && relocatedIntoPkg.name === packageName) {\n      // a file that was relocated into a package does a self-import of that\n      // package's name. This can happen when an addon (like ember-cli-mirage)\n      // emits files from its own treeForApp that contain imports of the app's own\n      // fully qualified name.\n      let fullPath = specifier.replace(packageName, relocatedIntoPkg.root);\n      return explicitRelative(dirname(this.filename), fullPath);\n    }\n\n    return specifier;\n  }\n\n  private handleExternal(specifier: string, isDynamic: boolean): Resolution {\n    let pkg = this.owningPackage();\n    if (!pkg || !pkg.isV2Ember()) {\n      return { result: 'continue' };\n    }\n\n    let packageName = getPackageName(specifier);\n    if (!packageName) {\n      // This is a relative import. We don't automatically externalize those\n      // because it's rare, and by keeping them static we give better errors. But\n      // we do allow them to be explicitly externalized by the package author (or\n      // a compat adapter). In the metadata, they would be listed in\n      // package-relative form, so we need to convert this specifier to that.\n      let absoluteSpecifier = resolve(dirname(this.filename), specifier);\n      let packageRelativeSpecifier = explicitRelative(pkg.root, absoluteSpecifier);\n      if (isExplicitlyExternal(packageRelativeSpecifier, pkg)) {\n        let publicSpecifier = absoluteSpecifier.replace(pkg.root, pkg.name);\n        return { result: 'external', specifier: publicSpecifier };\n      } else {\n        return { result: 'continue' };\n      }\n    }\n\n    // absolute package imports can also be explicitly external based on their\n    // full specifier name\n    if (isExplicitlyExternal(specifier, pkg)) {\n      return { result: 'external', specifier };\n    }\n\n    if (!pkg.meta['auto-upgraded'] && emberVirtualPeerDeps.has(packageName)) {\n      // Native v2 addons are allowed to use the emberVirtualPeerDeps like\n      // `@glimmer/component`. And like all v2 addons, it's important that they\n      // see those dependencies after those dependencies have been converted to\n      // v2.\n      //\n      // But unlike auto-upgraded addons, native v2 addons are not necessarily\n      // copied out of their original place in node_modules. And from that\n      // original place they might accidentally resolve the emberVirtualPeerDeps\n      // that are present there in v1 format.\n      //\n      // So before we even check isResolvable, we adjust these imports to point at\n      // the app's copies instead.\n      if (emberVirtualPeerDeps.has(packageName)) {\n        if (!this.options.activeAddons[packageName]) {\n          throw new Error(\n            `${pkg.name} is trying to import the app's ${packageName} package, but it seems to be missing`\n          );\n        }\n        return {\n          result: 'redirect-to',\n          specifier: explicitRelative(\n            dirname(this.filename),\n            specifier.replace(packageName, this.options.activeAddons[packageName])\n          ),\n        };\n      }\n    }\n\n    let relocatedPkg = this.relocatedIntoPackage();\n    if (relocatedPkg) {\n      // this file has been moved into another package (presumably the app).\n\n      // first try to resolve from the destination package\n      if (isResolvable(packageName, relocatedPkg, this.options.appRoot)) {\n        // self-imports are legal in the app tree, even for v2 packages.\n        if (!pkg.meta['auto-upgraded'] && packageName !== pkg.name) {\n          throw new Error(\n            `${pkg.name} is trying to import ${packageName} from within its app tree. This is unsafe, because ${pkg.name} can't control which dependencies are resolvable from the app`\n          );\n        }\n        return { result: 'continue' };\n      } else {\n        // second try to resolve from the source package\n        let targetPkg = isResolvable(packageName, pkg, this.options.appRoot);\n        if (targetPkg) {\n          // self-imports are legal in the app tree, even for v2 packages.\n          if (!pkg.meta['auto-upgraded'] && packageName !== pkg.name) {\n            throw new Error(\n              `${pkg.name} is trying to import ${packageName} from within its app tree. This is unsafe, because ${pkg.name} can't control which dependencies are resolvable from the app`\n            );\n          }\n          // we found it, but we need to rewrite it because it's not really going to\n          // resolve from where its sitting\n          return {\n            result: 'redirect-to',\n            specifier: explicitRelative(dirname(this.filename), specifier.replace(packageName, targetPkg.root)),\n          };\n        }\n      }\n    } else {\n      if (isResolvable(packageName, pkg, this.options.appRoot)) {\n        if (!pkg.meta['auto-upgraded'] && !reliablyResolvable(pkg, packageName)) {\n          throw new Error(\n            `${pkg.name} is trying to import from ${packageName} but that is not one of its explicit dependencies`\n          );\n        }\n        return { result: 'continue' };\n      }\n    }\n\n    // auto-upgraded packages can fall back to the set of known active addons\n    //\n    // v2 packages can fall back to the set of known active addons only to find\n    // themselves (which is needed due to app tree merging)\n    if ((pkg.meta['auto-upgraded'] || packageName === pkg.name) && this.options.activeAddons[packageName]) {\n      return {\n        result: 'redirect-to',\n        specifier: explicitRelative(\n          dirname(this.filename),\n          specifier.replace(packageName, this.options.activeAddons[packageName])\n        ),\n      };\n    }\n\n    if (pkg.meta['auto-upgraded']) {\n      // auto-upgraded packages can fall back to attempting to find dependencies at\n      // runtime. Native v2 packages can only get this behavior in the\n      // isExplicitlyExternal case above because they need to explicitly ask for\n      // externals.\n      return { result: 'external', specifier };\n    } else {\n      // native v2 packages don't automatically externalize *everything* the way\n      // auto-upgraded packages do, but they still externalize known and approved\n      // ember virtual packages (like @ember/component)\n      if (emberVirtualPackages.has(packageName)) {\n        return { result: 'external', specifier };\n      }\n    }\n\n    // non-resolvable imports in dynamic positions become runtime errors, not\n    // build-time errors, so we emit the runtime error module here before the\n    // stage3 packager has a chance to see the missing module. (Maybe some stage3\n    // packagers will have this behavior by default, because it would make sense,\n    // but webpack at least does not.)\n    if (isDynamic) {\n      return { result: 'runtime-failure', specifier };\n    }\n\n    // this is falling through with the original specifier which was\n    // non-resolvable, which will presumably cause a static build error in stage3.\n    return { result: 'continue' };\n  }\n}\n\nfunction isExplicitlyExternal(specifier: string, fromPkg: V2Package): boolean {\n  return Boolean(fromPkg.isV2Addon() && fromPkg.meta['externals'] && fromPkg.meta['externals'].includes(specifier));\n}\n\nfunction isResolvable(packageName: string, fromPkg: V2Package, appRoot: string): false | Package {\n  try {\n    let dep = PackageCache.shared('embroider-stage3', appRoot).resolve(packageName, fromPkg);\n    if (!dep.isEmberPackage() && fromPkg.meta['auto-upgraded'] && !fromPkg.hasDependency('ember-auto-import')) {\n      // classic ember addons can only import non-ember dependencies if they\n      // have ember-auto-import.\n      //\n      // whereas native v2 packages can always import any dependency\n      return false;\n    }\n    return dep;\n  } catch (err) {\n    if (err.code !== 'MODULE_NOT_FOUND') {\n      throw err;\n    }\n    return false;\n  }\n}\n\n// we don't want to allow things that resolve only by accident that are likely\n// to break in other setups. For example: import your dependencies'\n// dependencies, or importing your own name from within a monorepo (which will\n// work because of the symlinking) without setting up \"exports\" (which makes\n// your own name reliably resolvable)\nfunction reliablyResolvable(pkg: V2Package, packageName: string) {\n  if (pkg.hasDependency(packageName)) {\n    return true;\n  }\n\n  if (pkg.name === packageName && pkg.packageJSON.exports) {\n    return true;\n  }\n\n  if (emberVirtualPeerDeps.has(packageName)) {\n    return true;\n  }\n\n  return false;\n}\n"]}